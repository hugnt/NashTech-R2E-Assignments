@using Assignment04_05_MVC.ViewModels
@using Assignment04_05_MVC.Common.Enums
@model PersonDetailsViewModel
@{
	ViewData["Title"] = @Model.Title;

}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.4/font/bootstrap-icons.css">
<div class="mt-4 mb-4 m-auto" style="max-width:1024px">
	<div class="card">
		<div class="card-header">
			<h3>@Model.Title</h3>
		</div>
		<div class="card-body">
			<form class="row g-3">
				<div class="col-md-6">
					<label for="FirstName" class="form-label">First name</label>
					<input name="FirstName" value="@Model.Person.FirstName" type="text" class="form-control" id="FirstName" placeholder="First Name" readonly="@Model.IsModeDetails" required>
				</div>
				<div class="col-md-6">
					<label for="LastName" class="form-label">Last name</label>
					<input name="LastName" value="@Model.Person.LastName" type="text" class="form-control" id="LastName" placeholder="Last Name" readonly="@Model.IsModeDetails" required>
				</div>
				<div class="col-md-4">
					<label for="DateOfBirth" class="form-label">Date of birth</label>
					<input name="DateOfBirth" value="@Model.Person.DateOfBirth.ToString("yyyy-MM-dd")" type="date" class="form-control" id="DateOfBirth" placeholder="Date of birth" readonly="@Model.IsModeDetails">
				</div>
				<div class="col-md-4">
					<label for="Gender" class="form-label">Gender</label>
					<select id="Gender" class="form-select" disabled="@Model.IsModeDetails">
						<option value="">Choose...</option>
						@{
							var memGender = new Dictionary<int, string>()
						{
						{0,"Male"},
						{1,"Female"}
						};
							int selectdGender = -1;
							if (@Model.Person.Gender == Gender.Male) selectdGender = 1;
							else if (@Model.Person.Gender == Gender.Female) selectdGender = 0;

							for (int i = 0; i <= 1; i++)
							{
								if (i == selectdGender)
								{
										<option value="@i" selected>@memGender[i]</option>
								}
								else
								{
										<option value="@i">@memGender[i]</option>
								}
							}
						}
					</select>
				</div>
				<div class="col-md-4">
					<label for="PhoneNumber" class="form-label">Phone Number</label>
					<input name="PhoneNumber" value="@Model.Person.PhoneNumber" type="tel" class="form-control" id="PhoneNumber" placeholder="Phone Number" readonly="@Model.IsModeDetails" required>
				</div>
				<div class="col-md-12">
					<label for="BirthPlace" class="form-label">Birth Place</label>
					<input name="BirthPlace" value="@Model.Person.BirthPlace" type="text" class="form-control" id="BirthPlace" placeholder="Birth Place" readonly="@Model.IsModeDetails">
				</div>
				<div class="col-md-12">
					<fieldset class="row">
						<div class="col-sm-10">
							<div class="form-check form-check-inline">
								<input class="form-check-input" type="checkbox" id="IsGraduated" value="@Model.Person.IsGraduated" checked="@Model.Person.IsGraduated" readonly="@Model.IsModeDetails">
								<label class="form-check-label" for="IsGraduated">Is Graduated?</label>
							</div>
						</div>
					</fieldset>
				</div>
				<div class="mb-3 d-flex justify-content-between">
					<div class="d-flex">
						<button class="btn btn-secondary" type="button"
								onclick="window.location.href='/Rookies'">
							<i class="bi bi-x"></i>
							Close
						</button>
						<button class="btn btn-warning ms-2" type="reset"
								hidden="@Model.IsHideResetButton"
								onclick="window.location.reload()">
							<i class="bi bi-arrow-clockwise"></i>
							Reset
						</button>
						<button class="btn btn-outline-success ms-2" type="button"
								hidden="@Model.IsHideAddnewButton"
							onclick="window.location.href='/Rookies/Details?id=@Model.Person.Id&formMode=@FormMode.Add'">
							<i class="bi bi-plus"></i>
							Add new
						</button>
						<button class="btn btn-outline-info ms-2" type="button"
								hidden="@Model.IsHideUpdateButton"
							onclick="window.location.href='/Rookies/Details?id=@Model.Person.Id&formMode=@FormMode.Update'">
							<i class="bi bi-pencil"></i>
							Update
						</button>
					</div>
					
					<div class="d-flex">
						<button class="btn btn-danger" type="button"
								hidden="@Model.IsHideDeleteButton"
								data-bs-toggle="modal" data-bs-target="#deleteModel" onclick="deletePerson(@Model.Person.Id, true)">
							<i class="bi bi-trash"></i>
							Delete
						</button>
						<button class="btn btn-success" type="button"
								onclick="saveData('@Model.RouteAction', '@Model.Method')"
								id="btnSave"
								hidden="@Model.IsHideSaveButton">
							<i class="bi bi-floppy"></i>
							Save
						</button>
					</div>
					
				</div>
			</form>
		</div>
	</div>
</div>
@await Html.PartialAsync("~/Views/Shared/Partial/_DeleteModalPartial.cshtml")
@section Scripts{
	<script src="~/js/person/person-crud.js"></script>
}

